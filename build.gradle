plugins {
    id 'org.springframework.boot' version '2.5.9'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'project-report'
    id 'org.sonarqube' version '3.3'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

//ext {
//	set('springCloudVersion', "2021.0.0")
//}
//
//dependencyManagement {
//	imports {
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//	}
//}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'

//    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth'

    implementation group: 'ch.qos.logback.contrib', name: 'logback-jackson', version: '0.1.5'
    implementation group: 'ch.qos.logback.contrib', name: 'logback-json-classic', version: '0.1.5'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    // guava is causing
    // Could not extract response: no suitable HttpMessageConverter found for response type
    // [interface com.example.bookstore.payload.GoogleBookGetResponse] and content type [application/json;charset=UTF-8]
    // due to 2.13.* jackson-databind instead of com.fasterxml.jackson.core:jackson-databind:2.12.6 (c)
//    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    compileOnly group: 'org.immutables', name: 'value', version: '2.8.8'
    annotationProcessor group: 'org.immutables', name: 'value', version: '2.8.8'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "${project.name}"
        property "sonar.projectKey", "${project.group}:${project.name}"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.exclusions", ["src/**/*.properties", "src/**/*.xml"]
        property "sonar.junit.reportsPath", "build/test-results/test"
        property "sonar.jacoco.reportPaths", ["build/jacoco/test.exec"]
    }
}
